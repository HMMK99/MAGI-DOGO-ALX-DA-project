USE MD_WATER_SERVICES;
select * from employee WHERE TOWN_NAME IN ('Harare', 'Kilimani');
UPDATE EMPLOYEE SET EMAIL = CONCAT(LOWER(REPLACE(EMPLOYEE_NAME, ' ', '.')), '@ndogowater.gov');
SELECT LENGTH(PHONE_NUMBER) FROM EMPLOYEE;
UPDATE EMPLOYEE SET PHONE_NUMBER = TRIM(PHONE_NUMBER);
SELECT TOWN_NAME, COUNT(*) FROM EMPLOYEE group by TOWN_NAME;


SELECT E.EMPLOYEE_NAME, COUNT(*) 
FROM EMPLOYEE E JOIN VISITS V ON E.assigned_employee_id=V.assigned_employee_id
GROUP BY E.EMPLOYEE_NAME;

SELECT L.TOWN_NAME, COUNT(*) FROM VISITS V INNER JOIN LOCATION L ON V.LOCATION_ID=L.LOCATION_ID
GROUP BY L.TOWN_NAME;

SELECT L.province_name, COUNT(*) FROM VISITS V INNER JOIN LOCATION L ON V.LOCATION_ID=L.LOCATION_ID
GROUP BY L.province_name;

SELECT L.LOCATION_TYPE, COUNT(*) FROM VISITS V INNER JOIN LOCATION L ON V.LOCATION_ID=L.LOCATION_ID
GROUP BY L.LOCATION_TYPE;

SELECT L.province_name, L.TOWN_NAME, COUNT(*) FROM VISITS V INNER JOIN LOCATION L ON V.LOCATION_ID=L.LOCATION_ID
GROUP BY L.province_name,  L.TOWN_NAME
ORDER BY L.province_name DESC, COUNT(*) DESC;


SELECT * FROM WATER_SOURCE;
SELECT SUM(NUMBER_OF_PEOPLE_SERVED) FROM WATER_SOURCE;
SELECT TYPE_OF_WATER_SOURCE, COUNT(*) FROM WATER_SOURCE
GROUP BY TYPE_OF_WATER_SOURCE;

SELECT TYPE_OF_WATER_SOURCE, AVG(NUMBER_OF_PEOPLE_SERVED) FROM WATER_SOURCE
GROUP BY TYPE_OF_WATER_SOURCE;

SELECT TYPE_OF_WATER_SOURCE, SUM(NUMBER_OF_PEOPLE_SERVED), RANK() OVER(ORDER BY SUM(NUMBER_OF_PEOPLE_SERVED) DESC) FROM WATER_SOURCE
GROUP BY TYPE_OF_WATER_SOURCE;

SELECT TYPE_OF_WATER_SOURCE, ROUND((SUM(NUMBER_OF_PEOPLE_SERVED)/27628140)*100) FROM WATER_SOURCE
GROUP BY TYPE_OF_WATER_SOURCE;

SELECT SOURCE_ID, TYPE_OF_WATER_SOURCE, NUMBER_OF_PEOPLE_SERVED, dense_rank() OVER(PARTITION BY TYPE_OF_WATER_SOURCE ORDER BY NUMBER_OF_PEOPLE_SERVED DESC) AS PERIORITY_RANK
FROM WATER_SOURCE 
WHERE TYPE_OF_WATER_SOURCE != 'tap_in_home'
;

SELECT DATEDIFF(MAX(TIME_OF_RECORD), MIN(TIME_OF_RECORD)), MAX(TIME_OF_RECORD), MIN(TIME_OF_RECORD) FROM VISITS;

SELECT TW.TYPE_OF_WATER_SOURCE, AVG(TIME_IN_QUEUE) FROM VISITS V JOIN WATER_SOURCE TW
ON V.source_id=TW.source_id
GROUP BY TYPE_OF_WATER_SOURCE;

SELECT AVG(TIME_IN_QUEUE) FROM VISITS V JOIN WATER_SOURCE TW
ON V.source_id=TW.source_id
-- WHERE TYPE_OF_WATER_SOURCE IN ('shared_tap','river')
;

SELECT DAYNAME(TIME_OF_RECORD), ROUND(AVG(TIME_IN_QUEUE)) FROM VISITS V JOIN WATER_SOURCE TW
ON V.source_id=TW.source_id
-- WHERE TYPE_OF_WATER_SOURCE IN ('shared_tap','river')
GROUP BY DAYNAME(TIME_OF_RECORD)
ORDER BY DAYNAME(TIME_OF_RECORD);

SELECT TIME_fORMAT(TIME(TIME_OF_RECORD), '%H:00') HOUR_OF_DAY, ROUND(AVG(TIME_IN_QUEUE)) AVG_TIME FROM VISITS V JOIN WATER_SOURCE TW -- HOUR(TIME(TIME_OF_RECORD))
ON V.source_id=TW.source_id
WHERE TYPE_OF_WATER_SOURCE IN ('shared_tap','river')
GROUP BY TIME_fORMAT(TIME(TIME_OF_RECORD), '%H:00')-- HOUR(TIME(TIME_OF_RECORD))
ORDER BY TIME_fORMAT(TIME(TIME_OF_RECORD), '%H:00')-- HOUR(TIME(TIME_OF_RECORD))
;

SELECT TIME_fORMAT(TIME(TIME_OF_RECORD), '%H:00') HOUR_OF_DAY, 
	ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Saturday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) Saturday,
    ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Sunday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) SUNDAY,
    ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Monday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) Monday,
    ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Tuesday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) Tuesday,
    ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Wednesday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) Wednesday,
    ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Thursday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) Thursday,
    ROUND(AVG(CASE
		WHEN DAYNAME(TIME_OF_RECORD) = 'Friday' THEN TIME_IN_QUEUE
        ELSE NULL
	END)) Friday
FROM VISITS V JOIN WATER_SOURCE TW -- HOUR(TIME(TIME_OF_RECORD))
ON V.source_id=TW.source_id
WHERE time_in_queue != 0
GROUP BY TIME_fORMAT(TIME(TIME_OF_RECORD), '%H:00')
	
-- HOUR(TIME(TIME_OF_RECORD))
ORDER BY TIME_fORMAT(TIME(TIME_OF_RECORD), '%H:00')-- HOUR(TIME(TIME_OF_RECORD));
;


SELECT CONCAT(day(time_of_record), " ", month(time_of_record), " ", year(time_of_record)) FROM visits;
SELECT CONCAT(day(time_of_record), " ", monthname(time_of_record), " ", year(time_of_record)) FROM visits;
SELECT CONCAT(monthname(time_of_record), " ", day(time_of_record), ", ", year(time_of_record)) FROM visits;
SELECT day(time_of_record), monthname(time_of_record), year(time_of_record) FROM visits;

SELECT
name,
wat_bas_r - LAG(wat_bas_r) OVER (PARTITION BY NAME ORDER BY YEAR) 
FROM 
global_water_access
ORDER BY
name;

SELECT E.EMPLOYEE_NAME, COUNT(*) 
FROM EMPLOYEE E JOIN VISITS V ON E.assigned_employee_id=V.assigned_employee_id
GROUP BY E.EMPLOYEE_NAME
ORDER BY COUNT(*);

SELECT 
    location_id,
    time_in_queue,
    AVG(time_in_queue) OVER (PARTITION BY location_id ORDER BY visit_count) AS total_avg_queue_time
FROM 
    visits
WHERE 
visit_count > 1 -- Only shared taps were visited > 1
ORDER BY 
    location_id, time_of_record;
    
SELECT AVG(NUMBER_OF_PEOPLE_SERVED) FROM WATER_SOURCE WHERE TYPE_OF_WATER_SOURCE = 'well';

SELECT
type_of_water_source,
SUM(number_of_people_served) AS population_served
FROM
water_source   WHERE type_of_water_source LIKE "%tap%"
GROUP BY
type_of_water_source
-- HAVING type_of_water_source LIKE "%tap%"
ORDER BY
population_served DESC;